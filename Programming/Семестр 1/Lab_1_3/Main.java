package Lab_1_3;

import java.util.Scanner;

/*В классическом наборе домино 28 костей. Кости представляют собой прямоугольники,
разделенные на 2 части, на каждой из них отмечены точки от 0 до 6. Каждая кость уникальна.
Напишите программу, используя объектно-ориентированную методологию, которая создает объект
набор домино, а затем выводит его на экран (пара целых чисел). Далее набор преобразуется в
последовательность (для каждой кости хранится местоположение следующей за ней). Для этого из
набора случайным образом выбирается кость и добавляется в конец последовательности
(исходно последовательность пустая). Для того чтобы не проходить через всю
последовательность, при добавлении очередной кости, необходимо хранить местоположения
последней добавленной кости, для которой, в свою очередь, хранится местоположение первой.
После того как последовательность из 28 костей полностью сформирована, она выводится на
экран от первой кости последовательности до последней. Далее необходимо по заданному числу
N (задается в main()) последовательно исключить сначала кость N от начала последовательности,
потом кость N от следующей после исключенной и так далее пока из последовательности не будут
исключены все кости. При этом каждый раз на экран необходимо выводить на одной строке
исключенную на данном шаге кость, на следующей оставшуюся после очередного исключения
последовательность от ее первой кости до последней. Если при очередном поиске исключаемой
кости дошли до конца последовательности, то поиск необходимо продолжить от начала
последовательности. Используйте для хранения набора и последовательности костей только один
массив из 28 элементов. При поиске кости и выводе на экран последовательности не должно быть
посещений исключенных из последовательности костей!
*/

public class Main {

	/*
	 * Удаляем каждый N-ый элемент из последовательности, пока она не станет пустой.
	 * N - это номер удаляемого элемента. "kit" - это набор домино. "sequence" - это
	 * последовательность, зависящая от набора.
	 * Сначала мы показываем содержимое набора. Затем создается последовательность,
	 * и мы показываем, как она выглядит.
	 * Затем запускается метод "remove", который удаляет и показывает каждый N-ый
	 * элемент, пока последовательность не опустеет
	 */
	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		System.out.println("Enter N:");
		int N = scanner.nextInt();

		System.out.println("Remove every " + N + " element from the sequence");
		System.out.println("");
		Kit kit = new Kit();
		System.out.println("Kit: ");
		kit.print();

		Sequence sequence = new Sequence(kit);
		kit.generationSequence(sequence);
		System.out.println("Sequence: ");
		sequence.print();

		System.out.println(sequence.bones[0].getNext());

		Sequence.remove(sequence, N);

		scanner.close();

	}
}
